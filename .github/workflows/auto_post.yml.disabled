name: Auto Generate & Publish Posts
on:
  schedule:
    # Run every hour at minute 0 (00:00, 01:00, 02:00, etc.)
    - cron: '0 * * * *'
    # Also run at minute 40 to start immediately
    - cron: '40 * * * *'
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-generate
  cancel-in-progress: false
jobs:
  generate:
    runs-on: ubuntu-latest
    env:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: pip install -r requirements.txt
      
      - name: Generate post
        id: generate
        run: |
          python scripts/generate_post.py
          if [ $? -ne 0 ]; then
            echo "::error::Post generation failed"
            exit 1
          fi
      
      - name: Check for changes
        id: check_changes
        run: |
          git add -A || true
          if git diff --quiet && git diff --cached --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No new content generated"
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "New content ready to commit"
          fi
      
      - name: Commit and push with rebase & retry
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          set -e
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"

          # Ensure we're on main and up-to-date before committing
          git fetch origin main
          git checkout -B main || true
          git pull --rebase origin main || true

          # Stage and commit
          git add _posts/ assets/images/
          if git diff --cached --quiet; then
            echo "No staged changes after rebase. Skipping commit."
            exit 0
          fi
          git commit -m "auto: new bilingual post $(date -u +'%Y-%m-%d %H:%M UTC')"

          # Push with up to 3 retries to handle concurrent runs
          n=0
          until [ "$n" -ge 3 ]
          do
            if git push origin HEAD:main; then
              echo "Push succeeded"
              break
            fi
            n=$((n+1))
            echo "Push failed (attempt $n). Rebase and retry after short sleep..."
            git fetch origin main
            git pull --rebase origin main || true
            sleep 3
          done
          if [ "$n" -ge 3 ]; then
            echo "::error::Failed to push after 3 attempts"
            exit 1
          fi
      
      - name: Notify on failure
        if: failure()
        run: |
          echo "::error::Workflow failed at $(date -u)"
          echo "Check logs for details"
  
  build_deploy:
    needs: generate
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
      - uses: actions/configure-pages@v5
      - uses: actions/jekyll-build-pages@v1
        with:
          source: "."
          destination: "./_site"
      - uses: actions/upload-pages-artifact@v3
        with:
          path: "./_site"
      - uses: actions/deploy-pages@v4
